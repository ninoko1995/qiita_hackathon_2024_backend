version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.1.3
  aws-ecr: circleci/aws-ecr@8.2.1

executors:
  ubuntu:
    working_directory: /tmp/work
    machine:
      image: ubuntu-2204:2024.04.4

jobs:
  parameters-check:
    docker:
      - image: cimg/python:3.9
    resource_class: small
    steps:
      - checkout
      - run:
          name: pipeline parameters check
          command: |
            echo "branch : ${CIRCLE_BRANCH}"
            echo "commit-hash : ${CIRCLE_SHA1}"

  build-and-push:
    executor: ubuntu
    parameters:
      repo:
        type: string
      dockerfile:
        type: string
        default: Dockerfile.prod
      extra_build_args:
        type: string
        default: ""
      path:
        type: string
        default: app/
    steps:
      - checkout
      - aws-ecr/build-and-push-image:
          checkout: false
          repo: << parameters.repo >>
          path: << parameters.path >>
          build-path: << parameters.path >>
          region: ap-northeast-1
          tag: ${CIRCLE_SHA1}
          dockerfile: << parameters.dockerfile >>
          extra-build-args: << parameters.extra_build_args >>
      - aws-ecr/tag-image:
          repo: << parameters.repo >>
          source-tag: ${CIRCLE_SHA1}
          target-tag: latest
  
  deploy-to-ecs:
    executor: ubuntu
    steps:
      - aws-cli/setup
      - run:
          name: Update ECS Service
          command: |
            # Register new task definition
            TASK_DEF_ARN=$(aws ecs register-task-definition \
              --family backend-task \
              --container-definitions "[{\"name\":\"backend-app\",\"image\":\"776810722124.dkr.ecr.ap-northeast-1.amazonaws.com/backend-service:${CIRCLE_SHA1}\",\"cpu\":256,\"memory\":512,\"essential\":true,\"portMappings\":[{\"containerPort\":5000,\"hostPort\":5000}]}]" \
              --execution-role-arn arn:aws:iam::776810722124:role/ecsTaskExecutionRole \
              --network-mode awsvpc \
              --requires-compatibilities FARGATE \
              --cpu "256" \
              --memory "512" \
              --query "taskDefinition.taskDefinitionArn" \
              --output text)
            echo "Registered task definition: ${TASK_DEF_ARN}"

            # Update ECS service with new task definition
            aws ecs update-service \
              --cluster backend-cluster \
              --service backend-service \
              --task-definition ${TASK_DEF_ARN} \
              --force-new-deployment \
              --region ap-northeast-1
      - run:
          name: Verify ECS Service Update
          command: |
            aws ecs describe-services \
              --cluster backend-cluster \
              --services backend-service \
              --region ap-northeast-1 \
              --query "services[0].deployments"

workflows:
  deploy_main_to_ecs:
    jobs:
      - parameters-check:
          filters:
            branches:
              only:
                - main
      - build-and-push:
          repo: backend-service
          filters:
            branches:
              only:
                - main
      - deploy-to-ecs:
          requires:
            - build-and-push
          filters:
            branches:
              only:
                - main
